apply plugin: 'com.android.application'

def verCode = 1

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    signingConfigs {
        release {
            keyAlias 'test'
            keyPassword '111111'
            storeFile file('test.jks')
            storePassword '111111'
        }

        debug {
            keyAlias 'test'
            keyPassword '111111'
            storeFile file('test.jks')
            storePassword '111111'
        }
    }
    defaultConfig {
        applicationId "com.example.thinkpad.test_git"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode verCode
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resValue("string", 'app_version', APP_VERSION)
        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {//这里是all，下面是根据自己的情况来定制
            def date = new Date()
            def formattedDate = date.format('yyyyMMdd')
            def fileName
            if (variant.buildType.name == "release") {
                // 输出apk名称为app_100_release.apk
                fileName = "test_V${defaultConfig.versionName}.apk"
            } else if (variant.buildType.name == "debug") {
                // 输出apk名称为app_100_debug.apk
                fileName = "test_debug_V${defaultConfig.versionName}_${formattedDate}.apk"
            } else {
                // 输出apk名称为app_v1.0.0_2017-12-11_101_beta.apk
                fileName = "test_Beta_V${defaultConfig.versionName}.apk"
            }
            if ("true".equals(IS_JENKINS)) {
                fileName = "Jenkens_" + fileName
            }

            //outputFileName = "HuaxiaSign_${defaultConfig.versionName}_${formattedDate}.apk"
            //很多博客只是写了上面这句话，没有具体赋值，自己来选择赋值给outputFileName
            outputFileName = fileName
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
